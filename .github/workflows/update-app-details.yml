name: Update App Details

on:
  workflow_dispatch:
    inputs:
      addNewsArticle:
        description: 'Add a new news article'
        required: false
        type: boolean
      newsTitle:
        description: 'Title of the news article'
        required: false
        type: string
      newsContent:
        description: 'Content of the news article'
        required: false
        type: string
      newsReleaseDate:
        description: 'Release date of the news article (optional, in YYYY-MM-DD format)'
        required: false
        type: string
      addRelease:
        description: 'Add a new app release'
        required: false
        type: boolean
      releaseVersion:
        description: 'Version of the new release'
        required: false
        type: string
      releaseDescription:
        description: 'Description of the new release'
        required: false
        type: string
      releaseDownloadLink:
        description: 'Download link for the new release'
        required: false
        type: string
      changeDownloadLink:
        description: 'Change the download link for the IPA'
        required: false
        type: boolean
      newDownloadLink:
        description: 'New download link for the IPA'
        required: false
        type: string

jobs:
  update-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update JSON file
        run: |
          # Path to the JSON file (changed to repo.json)
          FILE_PATH="repo.json"
          
          # Read the current JSON data
          JSON=$(cat $FILE_PATH)

          # Add News Article
          if [ "${{ github.event.inputs.addNewsArticle }}" = "true" ]; then
            JSON=$(echo "$JSON" | jq --arg title "${{ github.event.inputs.newsTitle }}" \
                                      --arg content "${{ github.event.inputs.newsContent }}" \
                                      --arg releaseDate "${{ github.event.inputs.newsReleaseDate }}" \
                                      '.news += [{"title": $title, "content": $content, "releaseDate": $releaseDate}]')
          fi

          # Add Release
          if [ "${{ github.event.inputs.addRelease }}" = "true" ]; then
            JSON=$(echo "$JSON" | jq --arg version "${{ github.event.inputs.releaseVersion }}" \
                                      --arg description "${{ github.event.inputs.releaseDescription }}" \
                                      --arg downloadLink "${{ github.event.inputs.releaseDownloadLink }}" \
                                      '.versions += [{"version": $version, "description": $description, "downloadLink": $downloadLink}]')
          fi

          # Change Download Link
          if [ "${{ github.event.inputs.changeDownloadLink }}" = "true" ]; then
            JSON=$(echo "$JSON" | jq --arg newDownloadLink "${{ github.event.inputs.newDownloadLink }}" \
                                      '.downloadLink = $newDownloadLink')
          fi

          # Save the updated JSON back to the file
          echo "$JSON" > $FILE_PATH

      - name: Commit updated JSON
        uses: EndBug/add-and-commit@v7
        with:
          message: 'Update app details'
          add: 'repo.json'

      - name: Push changes
        run: git push
