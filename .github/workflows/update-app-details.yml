name: Update Version

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The new version number'
        required: true
      version_description:
        description: 'The description of the new version'
        required: true
      download_file:
        description: 'The URL of the download file'
        required: true

jobs:
  update_version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download the file
        run: |
          curl -L ${{ github.event.inputs.download_file }} -o download_file.ipa

      - name: Calculate file size
        id: file_size
        run: |
          FILE_SIZE=$(stat -c %s download_file.ipa)
          echo "File size: $FILE_SIZE"
          echo "file_size=$FILE_SIZE" >> $GITHUB_ENV

      - name: Get current date and time
        id: date
        run: |
          CURRENT_DATE=$(date --utc +%Y-%m-%dT%H:%M:%SZ)
          echo "Current date: $CURRENT_DATE"
          echo "current_date=$CURRENT_DATE" >> $GITHUB_ENV

      - name: Update repo.json with new version
        run: |
          VERSION="${{ github.event.inputs.version }}"
          VERSION_DESCRIPTION="${{ github.event.inputs.version_description }}"
          DOWNLOAD_URL="${{ github.event.inputs.download_file }}"
          FILE_SIZE=$FILE_SIZE
          DATE=$current_date

          # Use jq to append the new version to the repo.json file
          jq --arg version "$VERSION" \
             --arg date "$DATE" \
             --arg version_description "$VERSION_DESCRIPTION" \
             --arg download_url "$DOWNLOAD_URL" \
             '.apps[0].versions += [{
               "version": $version,
               "date": $date,
               "localizedDescription": $version_description,
               "downloadURL": $download_url,
               "size": $FILE_SIZE
             }]' repo.json > temp.json && mv temp.json repo.json

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add repo.json
          git commit -m "Add version ${{ github.event.inputs.version }}"
          git push
